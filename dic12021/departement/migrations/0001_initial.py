# Generated by Django 3.2.9 on 2021-11-29 23:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomClasse', models.CharField(max_length=100)),
                ('description_classe', models.TextField(max_length=1000)),
                ('departement', models.CharField(blank=True, choices=[('GEM', 'Gem'), ('GC', 'Gc'), ('TC', 'Tc'), ('AERO', 'Aero'), ('GIT', 'Git')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prenom', models.CharField(max_length=100)),
                ('nom', models.CharField(max_length=100)),
                ('mail', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Etudiant',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='departement.user')),
                ('password', models.CharField(max_length=100)),
                ('date_de_naissance', models.DateField()),
                ('lieu_de_naissance', models.CharField(max_length=100)),
            ],
            bases=('departement.user',),
        ),
        migrations.CreateModel(
            name='UE_matiere',
            fields=[
                ('nom_UE', models.CharField(max_length=100, verbose_name="le nom de l'unité de l'enseignement")),
                ('code_UE', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='departement.classe')),
            ],
        ),
        migrations.CreateModel(
            name='Matière',
            fields=[
                ('nom_matiere', models.CharField(max_length=100, verbose_name='le nom de la matière')),
                ('code_matiere', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('coef_matiere', models.IntegerField()),
                ('credit_matiere', models.IntegerField()),
                ('quota_horaire', models.IntegerField()),
                ('description_matiere', models.TextField()),
                ('nom_UE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='departement.ue_matiere')),
            ],
        ),
        migrations.CreateModel(
            name='Professeur',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='departement.user')),
                ('contact_prof', models.CharField(max_length=100, verbose_name='Contact du prof')),
                ('date_d_adhesion', models.DateField()),
                ('chef_departement', models.CharField(blank=True, choices=[(1, 'True'), (2, 'False')], max_length=100)),
                ('matieres', models.ManyToManyField(to='departement.Matière')),
            ],
            bases=('departement.user',),
        ),
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, choices=[('GEM', 'Gem'), ('GC', 'Gc'), ('TC', 'Tc'), ('AERO', 'Aero')], max_length=100)),
                ('mail_departement', models.EmailField(max_length=254)),
                ('numero_departement', models.CharField(max_length=12)),
                ('description_dept', models.TextField(max_length=1000)),
                ('professeurs', models.ManyToManyField(to='departement.Professeur')),
            ],
        ),
    ]
